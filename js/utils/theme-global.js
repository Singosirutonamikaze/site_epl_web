/**
 * GESTIONNAIRE GLOBAL DU BOUTON DE TH√àME
 * 
 * Ce script assure que le bouton de th√®me fonctionne sur toutes les pages,
 * m√™me celles qui utilisent le composant sidebar dynamique.
 * 
 * PROBL√àME R√âSOLU :
 * - Les pages avec sidebar dynamique n'avaient pas de bouton de th√®me fonctionnel
 * - Conflits entre boutons int√©gr√©s et composant sidebar
 * - Timing d'initialisation des composants
 * 
 * SOLUTION :
 * - D√©tection automatique du bouton de th√®me sur toutes les pages
 * - Gestion des conflits d'√©v√©nements
 * - Retry automatique si le composant n'est pas encore charg√©
 * 
 * POUR L'√âQUIPE :
 * - Importer ce fichier apr√®s themes.js
 * - Fonctionne automatiquement, pas de configuration n√©cessaire
 * - Logs d√©taill√©s pour le debug
 * 
 * AUTEUR : sCtt3 | EPL Devs
 * DERNI√àRE MODIFICATION : 18 Octobre 2025
 */
class GestionnaireThemeGlobal {
    constructor() {
        this.boutonConfigure = false;
        this.init();
    }

    /**
     * Initialise le gestionnaire global
     */
    init() {
        console.log('üåç GestionnaireThemeGlobal initialis√©');
        
        // Attendre que le DOM soit pr√™t
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', () => this.configurerBoutonTheme());
        } else {
            this.configurerBoutonTheme();
        }
    }

    /**
     * Configure le bouton de th√®me
     */
    configurerBoutonTheme() {
        if (this.boutonConfigure) {
            console.log('‚ö†Ô∏è Bouton de th√®me d√©j√† configur√©');
            return;
        }

        console.log('üîç Recherche du bouton de th√®me...');
        
        // Chercher le bouton de th√®me
        const boutonTheme = document.getElementById('bouton-theme-dynamique');
        
        if (boutonTheme) {
            console.log('‚úÖ Bouton de th√®me trouv√©');
            
            // V√©rifier si le gestionnaire de th√®mes est disponible
            if (typeof GestionnaireThemes !== 'undefined') {
                console.log('‚úÖ GestionnaireThemes disponible');
                
                // Initialiser le gestionnaire de th√®mes s'il n'existe pas encore
                if (!window.gestionnaireThemes) {
                    window.gestionnaireThemes = new GestionnaireThemes();
                    console.log('‚úÖ Gestionnaire de th√®mes initialis√© globalement');
                }
                
                // Supprimer tous les anciens √©couteurs d'√©v√©nements
                const nouveauBouton = boutonTheme.cloneNode(true);
                boutonTheme.parentNode.replaceChild(nouveauBouton, boutonTheme);
                
                // Gestion du clic sur le bouton de th√®me
                nouveauBouton.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    console.log('üé® Clic sur le bouton de th√®me d√©tect√© (global)');
                    
                    if (window.gestionnaireThemes) {
                        console.log('üîÑ Appel de changerTheme()...');
                        window.gestionnaireThemes.changerTheme();
                        this.mettreAJourIconeTheme();
                    } else {
                        console.error('‚ùå Gestionnaire de th√®mes non disponible');
                    }
                });
                
                // Initialiser l'ic√¥ne du th√®me
                this.mettreAJourIconeTheme();
                
                this.boutonConfigure = true;
                console.log('‚úÖ Bouton de th√®me configur√© globalement avec succ√®s');
            } else {
                console.log('‚è≥ Gestionnaire de th√®mes pas encore charg√©, r√©essai dans 300ms...');
                setTimeout(() => this.configurerBoutonTheme(), 300);
            }
        } else {
            console.log('‚è≥ Bouton de th√®me pas encore charg√©, r√©essai dans 300ms...');
            setTimeout(() => this.configurerBoutonTheme(), 300);
        }
    }

    /**
     * Met √† jour l'ic√¥ne du th√®me
     */
    mettreAJourIconeTheme() {
        const iconeTheme = document.querySelector('.icone-theme-dynamique');
        if (iconeTheme && window.gestionnaireThemes) {
            const themeActuel = window.gestionnaireThemes.obtenirThemeActuel();
            console.log('üé® Th√®me actuel:', themeActuel);

            if (themeActuel === 'sombre') {
                iconeTheme.innerHTML = `<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>`;
            } else {
                iconeTheme.innerHTML = `
                    <circle cx="12" cy="12" r="5"/>
                    <path d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42"/>
                `;
            }
        }
    }
}

// Initialiser le gestionnaire global
window.gestionnaireThemeGlobal = new GestionnaireThemeGlobal();